class Solution:
    def minSubArrayLen(self, s: int, nums: List[int]) -> int:
        
        left = 0
        right = 0
        sum = 0
        min_length = float('inf')
        
        while right < len(nums):
            sum += nums[right]
            if sum >= s:
                min_length = min(min_length, right-left+1)
                sum -= nums[left] + nums[right]
                left += 1
            else:
                right += 1
                
        if min_length == float('inf'):
            return 0

        return min_length
        
        
#         min_length = len(nums)
        
#         for i in range(len(nums)):
#             j = i+1
#             while sum(nums[i:j]) < s and j < len(nums) and len(nums[i:j]) < min_length:
#                 j+=1
#             if sum(nums[i:j]) >= s:
#                 min_length = min(min_length, len(nums[i:j]))
            
#         return min_length
		
		
