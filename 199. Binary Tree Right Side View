		
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def rightSideView(self, root: TreeNode) -> List[int]:
        
        if root is None: return
        
        # level order traversal - last element at each level
        traversal = self.levelOrderTraversal(root)
        # print("traversal: ", traversal)   
        
        answer = []
        for t in traversal:
            answer.append(t[-1])
            
        # print("answer: ", answer)
        return answer
        
        
    def levelOrderTraversal(self, root):
        
        arr = []
        temp = []
        
        queue = [root, "d"] # delimiter
        
        while queue:
            a = queue.pop(0)
            if a == "d":
                arr.append(temp)
                temp = []
                if len(queue) > 0:
                    queue.append("d")
                
            else:
                temp.append(a.val)
                if a.left:
                    queue.append(a.left)
                if a.right:
                    queue.append(a.right)
                    
        return arr
        
        
