class Solution:
    def constructRectangle(self, area: int) -> List[int]:
        
        print("area: ", area)
        pairs = []
        
        for i in range(1, area+1):
            if area % i == 0:
                divisor = area // i
                pairs.append([i, divisor])
                
        print("pairs: ", pairs)
        
        pairs_first_constraint = []
        # checking constraint L >= W
        for p in pairs:
            if p[0] >= p[1]:
                pairs_first_constraint.append(p)
                
        print("pairs_first_constraint: ",pairs_first_constraint)
        
        # checking the difference
        
        difference = []
        pp = 0
        while pp < len(pairs_first_constraint):
            diff = pairs_first_constraint[pp][0] - pairs_first_constraint[pp][1]
            difference.append(diff)
            pp+=1
            
        print("difference: ", difference)
        
        a = min(difference)
        pp = 0
        while pp < len(pairs_first_constraint):
            if pairs_first_constraint[pp][0] - pairs_first_constraint[pp][1] == a:
                print([pairs_first_constraint[pp][0], pairs_first_constraint[pp][1]])
                return([pairs_first_constraint[pp][0], pairs_first_constraint[pp][1]])
            pp+=1
        
    
