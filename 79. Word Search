class Solution:
    def exist(self, board: List[List[str]], word: str) -> bool:
        
        for i in range(len(board)):
            for j in range(len(board[i])):
                if self.dfs(board, word, i, j):
                    return True
        return False
    
    
    def dfs(self, board, word, row, col):
        
        if len(word) == 0:
            return True
        
        if row < 0 or col < 0 or row >= len(board) or col >= len(board[0]) or board[row][col] != word[0]:
            return False
        
        temp = board[row][col]
        board[row][col] = ""
        
        a = self.dfs(board, word[1:], row-1, col) or self.dfs(board, word[1:], row+1, col) or self.dfs(board, word[1:], row, col-1) or self.dfs(board, word[1:], row, col+1)
    
        board[row][col] = temp
        return a
        
