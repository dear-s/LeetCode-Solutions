class Solution:
    def uniquePaths(self, m: int, n: int) -> int:
        
        # dynamic approach
        # make a 2d DP array ---> take sum of top and left cell [2 paths] - breaking down
        
        dp = [[0 for x in range(m)] for y in range(n)]
        print("dp: ", dp)
        
        # first row and col --- only one way i.e. left and up respectively
        
        for i in range(len(dp)):
            for j in range(len(dp[i])):
                dp[0][j] = 1 # first row
                dp[i][0] = 1 # first col
                
                if i != 0 and j != 0:
                    dp[i][j] = dp[i-1][j] + dp[i][j-1] # top, left
                    
        return dp[n-1][m-1]
