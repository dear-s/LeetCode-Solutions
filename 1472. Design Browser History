
class BrowserHistory:

    def __init__(self, homepage: str):
        
        self.homepage = homepage # current homepage
        self.history = [homepage]
        self.current_pos = 0        

    def visit(self, url: str) -> None:
        
        self.history = self.history[:self.current_pos+1]
        self.history.append(url)
        self.current_pos = len(self.history) -1

    def back(self, steps: int) -> str:
        # traverse back
        # check the length of the history array and see if you can go back
        if self.current_pos - steps < 0:
            self.current_pos = 0
        else:
            self.current_pos -= steps
        return self.history[self.current_pos]
                

    def forward(self, steps: int) -> str:
        if self.current_pos + steps >= len(self.history):
            self.current_pos = len(self.history)-1
        else:
            i = 0
            while i < steps:
                self.current_pos += 1
                i+=1
            
            if self.current_pos < len(self.history):
                return self.history[self.current_pos]
            
        return self.history[self.current_pos]


# Your BrowserHistory object will be instantiated and called as such:
# obj = BrowserHistory(homepage)
# obj.visit(url)
# param_2 = obj.back(steps)
# param_3 = obj.forward(steps)
