
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def zigzagLevelOrder(self, root: TreeNode) -> List[List[int]]:
        
        if root is None: return None
        
        # level order traversal
        # shift accordingly
        
        traversal = []
        queue = [root]
        
        temp = []
        queue.append("d")
        
        while queue:
            a = queue.pop(0)
            if a == "d":
                # delimiter
                if len(temp) > 0:
                    traversal.append(temp)
                    temp = []
                    queue.append("d")
            else:
                temp.append(a.val)
                # add child nodes - queue
                if a.left:
                    queue.append(a.left)
                if a.right:
                    queue.append(a.right)

                
        for t in range(1, len(traversal), 2):
                traversal[t] = traversal[t][::-1]

        return traversal

