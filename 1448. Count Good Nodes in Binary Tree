# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def goodNodes(self, root: TreeNode) -> int:
        
        
        self.count = 0
        if root is None: return 0
        
        self.dfs(root, [root.val])
        
        return self.count
        
        
    def dfs(self, root, traverse):
        
        if root is None:
            return
        
        cool = 0
        for t in traverse:
            if t <= root.val:
                cool += 1
                
        if cool == len(traverse):
            self.count += 1
        
        if root.left is not None:
            self.dfs(root.left, traverse + [root.left.val])
            
        if root.right is not None:
            self.dfs(root.right, traverse + [root.right.val])
