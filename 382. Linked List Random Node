
# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:

    def __init__(self, head: ListNode):
        """
        @param head The linked list's head.
        Note that the head is guaranteed to be not null, so it contains at least one node.
        """
        self.head  = head
        

    def getRandom(self) -> int:
        """
        Returns a random node's value.
        """
        
        if self.head is None:
            return None
        
        new_head = self.head
        
        # make array
        array = []
        
        while new_head:
            array.append(new_head.val)
            new_head = new_head.next
                    
        num = random.choices(array)

        return num[0]
        


# Your Solution object will be instantiated and called as such:
# obj = Solution(head)
# param_1 = obj.getRandom()

        
